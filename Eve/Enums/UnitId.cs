// NOTE: This file was auto-generated by a tool.  Do not edit this file manually.
// Any changes you make may be overwritten the next time the contents are generated.
namespace Eve {


  /// <summary>Contains the ID values associated with the Unit class.</summary>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("Eve.Meta", "1.76.447.38016")]
  [System.ComponentModel.DescriptionAttribute("Contains the ID values associated with the Unit class.")]
  public enum UnitId : byte {

    /// <summary>Meter</summary>
    
    [System.ComponentModel.DescriptionAttribute("Meter")]
    Length = 1,

    /// <summary>Kilogram</summary>
    
    [System.ComponentModel.DescriptionAttribute("Kilogram")]
    Mass = 2,

    /// <summary>Second</summary>
    
    [System.ComponentModel.DescriptionAttribute("Second")]
    Time = 3,

    /// <summary>Ampere</summary>
    
    [System.ComponentModel.DescriptionAttribute("Ampere")]
    ElectricCurrent = 4,

    /// <summary>Kelvin</summary>
    
    [System.ComponentModel.DescriptionAttribute("Kelvin")]
    Temperature = 5,

    /// <summary>Mole</summary>
    
    [System.ComponentModel.DescriptionAttribute("Mole")]
    AmountOfSubstance = 6,

    /// <summary>Candela</summary>
    
    [System.ComponentModel.DescriptionAttribute("Candela")]
    LuminousIntensity = 7,

    /// <summary>Square meter</summary>
    
    [System.ComponentModel.DescriptionAttribute("Square meter")]
    Area = 8,

    /// <summary>Cubic meter</summary>
    
    [System.ComponentModel.DescriptionAttribute("Cubic meter")]
    Volume = 9,

    /// <summary>Meter per second</summary>
    
    [System.ComponentModel.DescriptionAttribute("Meter per second")]
    Speed = 10,

    /// <summary>Meter per second squared</summary>
    
    [System.ComponentModel.DescriptionAttribute("Meter per second squared")]
    Acceleration = 11,

    /// <summary>Reciprocal meter</summary>
    
    [System.ComponentModel.DescriptionAttribute("Reciprocal meter")]
    WaveNumber = 12,

    /// <summary>Kilogram per cubic meter</summary>
    
    [System.ComponentModel.DescriptionAttribute("Kilogram per cubic meter")]
    MassDensity = 13,

    /// <summary>Cubic meter per kilogram</summary>
    
    [System.ComponentModel.DescriptionAttribute("Cubic meter per kilogram")]
    SpecificVolume = 14,

    /// <summary>Ampere per square meter</summary>
    
    [System.ComponentModel.DescriptionAttribute("Ampere per square meter")]
    CurrentDensity = 15,

    /// <summary>Ampere per meter</summary>
    
    [System.ComponentModel.DescriptionAttribute("Ampere per meter")]
    MagneticFieldStrength = 16,

    /// <summary>Mole per cubic meter</summary>
    
    [System.ComponentModel.DescriptionAttribute("Mole per cubic meter")]
    AmountOfSubstanceConcentration = 17,

    /// <summary>Candela per square meter</summary>
    
    [System.ComponentModel.DescriptionAttribute("Candela per square meter")]
    Luminance = 18,

    /// <summary>Kilogram per kilogram, which may be represented by the number 1</summary>
    
    [System.ComponentModel.DescriptionAttribute("Kilogram per kilogram, which may be represented by the number 1")]
    MassFraction = 19,

    
    Milliseconds = 101,

    
    Millimeters = 102,

    
    MegaPascals = 103,

    /// <summary>Indicates that the unit is a multiplier.</summary>
    
    [System.ComponentModel.DescriptionAttribute("Indicates that the unit is a multiplier.")]
    Multiplier = 104,

    
    Percentage = 105,

    
    Teraflops = 106,

    
    MegaWatts = 107,

    /// <summary>Used for resistance.
    ///0.0 = 100% 1.0 = 0%
    ///</summary>
    
    [System.ComponentModel.DescriptionAttribute("Used for resistance.\r\n0.0 = 100% 1.0 = 0%\r\n")]
    InverseAbsolutePercent = 108,

    /// <summary>Used for multipliers displayed as %
    ///1.1 = +10%
    ///0.9 = -10%</summary>
    
    [System.ComponentModel.DescriptionAttribute("Used for multipliers displayed as %\r\n1.1 = +10%\r\n0.9 = -10%")]
    ModifierPercent = 109,

    /// <summary>Used to modify damage resistance. Damage resistance bonus.
    ///0.1 = 90%
    ///0.9 = 10%</summary>
    
    [System.ComponentModel.DescriptionAttribute("Used to modify damage resistance. Damage resistance bonus.\r\n0.1 = 90%\r\n0.9 = 10%")]
    InversedModifierPercent = 111,

    /// <summary>Rotation speed.</summary>
    
    [System.ComponentModel.DescriptionAttribute("Rotation speed.")]
    RadiansSecond = 112,

    
    Hitpoints = 113,

    /// <summary>Giga Joule</summary>
    
    [System.ComponentModel.DescriptionAttribute("Giga Joule")]
    CapacitorUnits = 114,

    
    GroupId = 115,

    
    TypeId = 116,

    
    Sizeclass = 117,

    
    OreUnits = 118,

    
    AttributeId = 119,

    
    AttributePoints = 120,

    /// <summary>Used for real percentages, i.e. the number 5 is 5%</summary>
    
    [System.ComponentModel.DescriptionAttribute("Used for real percentages, i.e. the number 5 is 5%")]
    RealPercent = 121,

    
    FittingSlots = 122,

    /// <summary>Shows seconds directly</summary>
    
    [System.ComponentModel.DescriptionAttribute("Shows seconds directly")]
    TrueTime = 123,

    /// <summary>Used for relative percentages displayed as %</summary>
    
    [System.ComponentModel.DescriptionAttribute("Used for relative percentages displayed as %")]
    ModifierRelativePercent = 124,

    
    Newton = 125,

    
    LightYear = 126,

    /// <summary>0.0 = 0% 1.0 = 100%</summary>
    
    [System.ComponentModel.DescriptionAttribute("0.0 = 0% 1.0 = 100%")]
    AbsolutePercent = 127,

    /// <summary>Mega bits per second</summary>
    
    [System.ComponentModel.DescriptionAttribute("Mega bits per second")]
    DroneBandwidth = 128,

    /// <summary>Hours</summary>
    
    [System.ComponentModel.DescriptionAttribute("Hours")]
    Hours = 129,

    /// <summary>ISK</summary>
    
    [System.ComponentModel.DescriptionAttribute("ISK")]
    Money = 133,

    /// <summary>Bandwidth for PI</summary>
    
    [System.ComponentModel.DescriptionAttribute("Bandwidth for PI")]
    LogisticalCapacity = 134,

    /// <summary>Used to denote distance, 1AU = The distance from the Earth to the Sun.</summary>
    
    [System.ComponentModel.DescriptionAttribute("Used to denote distance, 1AU = The distance from the Earth to the Sun.")]
    AstronomicalUnit = 135,

    /// <summary>Slot number prefix for various purposes</summary>
    
    [System.ComponentModel.DescriptionAttribute("Slot number prefix for various purposes")]
    Slot = 136,

    /// <summary>For displaying boolean flags</summary>
    
    [System.ComponentModel.DescriptionAttribute("For displaying boolean flags")]
    Boolean = 137,

    /// <summary>Units of something, for example fuel</summary>
    
    [System.ComponentModel.DescriptionAttribute("Units of something, for example fuel")]
    Units = 138,

    /// <summary>Forces a plus sign for positive values</summary>
    
    [System.ComponentModel.DescriptionAttribute("Forces a plus sign for positive values")]
    Bonus = 139,

    /// <summary>For anything which is divided by levels</summary>
    
    [System.ComponentModel.DescriptionAttribute("For anything which is divided by levels")]
    Level = 140,

    /// <summary>For various counts to do with turret, launcher and rig hardpoints</summary>
    
    [System.ComponentModel.DescriptionAttribute("For various counts to do with turret, launcher and rig hardpoints")]
    Hardpoints = 141,

    
    Sex = 142,
  }
}
